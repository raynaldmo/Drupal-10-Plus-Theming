# This file contains default .gitignore rules. To use it, copy it to .gitignore,
# and it will cause files like your settings.php and user-uploaded files to be
# excluded from Git version control. This is a common strategy to avoid
# accidentally including private information in public repositories and patch
# files.
#
# Because .gitignore can be specific to your site, this file has a different
# name; updating Drupal core will not override your custom .gitignore file.

# Ignore core when managing all of a project's dependencies with Composer
# including Drupal core.
# core

# Ignore dependencies that are managed with Composer.
# Generally you should only ignore the root vendor directory. It's important
# that core/assets/vendor and any other vendor directories within contrib or
# custom module, theme, etc., are not ignored unless you purposely do so.

# We don't ignore files in the vendor directory. 
# If we did we'd have to install and run composer on our production 
# site to download and update these files. 
# Some hosting providers may not allow us to install composer or
# other third-party packages.
# /vendor/

# Ignore site specific files and files that may contain sensitive information.
/web/sites/*/settings*.php
/web/sites/*/services*.yml

# Ignore paths that contain user-generated content.
/web/sites/*/files
/web/sites/*/private

# Ignore multi-site test environment.
/web/sites/simpletest

# Ignore DDEV configuration files
/.ddev/

# Ignore IDE (PhpStorm and VSCode) files
/.idea/  
/.vscode/


# Ignore node modules
/node_modules

# Ignore css related stuff
*.css.map
*.css.map.map

# Ignore MacOS artifacts
.DS_Store

# Private and local development files
/Development
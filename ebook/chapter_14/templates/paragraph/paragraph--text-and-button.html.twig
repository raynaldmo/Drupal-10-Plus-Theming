{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'cta',
  ]
%}
{% block paragraph %}
  {% set image_url = '' %}
  {% set image_uri = 
    paragraph.field_image|file_uri
  %}
  {% if image_uri is not empty %}
    {# Use Twig Tweak module image_style filter to get url #}
    {% set image_url = 
      image_uri|image_style('large_16_9_1920x1080')
    %}
  {% endif %}
  <section{{ attributes.addClass(classes).setAttribute('id', 'cta') }}
      style = 'background: linear-gradient(rgba(40, 58, 90, 0.9), rgba(40, 58, 90, 0.9)), url("{{image_url}}") fixed center center;
        background-attachment: scroll, fixed;
        background-size: auto, auto;
        background-size: cover;
        padding: 120px 0;'>
    {% block content %}
      <div class="container" data-aos="zoom-in">
        <div class="row">
          <div class="col-lg-9 text-center text-lg-start">
            {{ content.field_text }}
          </div>
          <div class="col-lg-3 cta-btn-container text-center">
            {# Use Twig Tweak drupal_link function to render button #}
            {{ drupal_link('Call To Action'|t,'#contact', {attributes: {class: 'cta-btn align-middle'}})}}
          </div>
        </div>
      </div>      
    {% endblock %}
  </section>
{% endblock paragraph %}